version: '3.8'

services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: hamtagold
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend

  rabbit:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - backend

  payment-service:
    build:
      context: .
      dockerfile: docker/payment/Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
    depends_on:
      - postgres
      - redis
      - rabbit
    networks:
      - backend

  pricing-service:
    build:
      context: .
      dockerfile: docker/pricing/Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
    depends_on:
      - postgres
      - redis
      - rabbit
    networks:
      - backend

  order-service:
    build:
      context: .
      dockerfile: docker/order/Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
    depends_on:
      - postgres
      - redis
      - rabbit
    networks:
      - backend

  market-service:
    build:
      context: .
      dockerfile: docker/market/Dockerfile
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
    depends_on:
      - postgres
      - redis
      - rabbit
    networks:
      - backend

  notification-service:
    build:
      context: .
      dockerfile: docker/notification/Dockerfile
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
    depends_on:
      - postgres
      - redis
      - rabbit
    networks:
      - backend

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  backend:
    driver: bridge
